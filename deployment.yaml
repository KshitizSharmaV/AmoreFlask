# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapi-deployment
  labels:
    app: flaskapi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flaskapi
  template:
    metadata:
      labels:
        app: flaskapi
    spec:
      # affinity:
      #     nodeAffinity:
      #       requiredDuringSchedulingIgnoredDuringExecution:
      #         nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: cloud.google.com/gke-nodepool
      #             operator: In
      #             values:
      #             - default-pool
      containers:
        - name: flaskapi
          image: us-central1-docker.pkg.dev/amore-f8cd6/amore-microservices/flask-api:latest
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          # imagePullPolicy: Never
          ports:
            - containerPort: 5040
          env:
            - name: FIREBASE_CRED
              valueFrom:
                secretKeyRef:
                  name: firebase-secret  # name of the Secret
                  key: stagingServiceAccountKey.json
          readinessProbe:
            httpGet:
              path: /test
              port: 5040
            initialDelaySeconds: 10
            periodSeconds: 10



---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  annotations:
    cloud.google.com/app-protocols: '{"my-https-port":"HTTPS","my-http-port":"HTTP"}'
spec:
  # ports:
  # - port: 5040
  #   protocol: TCP
  #   targetPort: 5040
  selector:
    app: flaskapi
  type: NodePort
  ports:
  - name: my-https-port
    port: 443
    targetPort: 5040
  - name: my-http-port
    port: 80
    targetPort: 5040
  - name: my-tcp-port
    port: 5040
    targetPort: 5040
